// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutBuilder.Data;

#nullable disable

namespace WorkoutBuilder.Migrations
{
    [DbContext(typeof(WorkoutBuilderContext))]
    [Migration("20220214034031_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WorkoutBuilder.Model.Workout", b =>
                {
                    b.Property<int>("WorkoutID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutID"), 1L, 1);

                    b.Property<string>("WorkoutDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutPartID")
                        .HasColumnType("int");

                    b.HasKey("WorkoutID");

                    b.HasIndex("WorkoutPartID");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("WorkoutBuilder.Model.WorkoutOfDay", b =>
                {
                    b.Property<int>("WorkoutID")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reps")
                        .HasColumnType("int");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.HasKey("WorkoutID");

                    b.ToTable("WorkoutOfDays");
                });

            modelBuilder.Entity("WorkoutBuilder.Model.WorkoutPart", b =>
                {
                    b.Property<int>("WorkoutPartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutPartID"), 1L, 1);

                    b.Property<string>("MuscleGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutPartID");

                    b.ToTable("WorkoutParts");
                });

            modelBuilder.Entity("WorkoutBuilder.Model.Workout", b =>
                {
                    b.HasOne("WorkoutBuilder.Model.WorkoutPart", "WorkoutPart")
                        .WithMany("Workouts")
                        .HasForeignKey("WorkoutPartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutPart");
                });

            modelBuilder.Entity("WorkoutBuilder.Model.WorkoutOfDay", b =>
                {
                    b.HasOne("WorkoutBuilder.Model.Workout", "Workout")
                        .WithMany("WorkoutOfDay")
                        .HasForeignKey("WorkoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WorkoutBuilder.Model.Workout", b =>
                {
                    b.Navigation("WorkoutOfDay");
                });

            modelBuilder.Entity("WorkoutBuilder.Model.WorkoutPart", b =>
                {
                    b.Navigation("Workouts");
                });
#pragma warning restore 612, 618
        }
    }
}
